@model Data.Models.AspNetUser

@{
    Layout = "_LayoutAdmin";
    ViewData["Title"] = "AccountDetail";
}

<main class="page-content bg-light">
    <div class="container-fluid">
        <div class="layout-specing">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h5 class="mb-0">User Details</h5>
                <a href="@Url.Action("AccountList", "AdminAccount")" class="btn btn-primary">Back to List</a>
            </div>
            <div class="card shadow-sm p-4 bg-white rounded">
                <form id="editUserForm" method="post" action="@Url.Action("UpdateUser", "AdminAccount")">
                    <input type="hidden" name="Id" value="@Model.Id" />
                    <div class="row">
                        <div class="col-md-6">
                            <label class="form-label fw-bold">Fullname:</label>
                            <p class="view-mode">@Model.UserName</p>
                            <input type="text" class="form-control edit-mode d-none" name="UserName" value="@Model.UserName" />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-bold">Email:</label>
                            <p class="view-mode">@Model.Email</p>
                            <input type="email" class="form-control edit-mode d-none" name="Email" value="@Model.Email" />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-bold">Phone Number:</label>
                            <p class="view-mode">@Model.PhoneNumber</p>
                            <input type="text" class="form-control edit-mode d-none" name="PhoneNumber" value="@Model.PhoneNumber" />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-bold">City:</label>
                            <p class="view-mode">@Model.Province</p>
                            <input type="text" class="form-control edit-mode d-none" name="Province" value="@Model.Province" />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-bold">Role:</label>
                            <p class="view-mode">@(Model.Roles.Any() ? string.Join(", ", Model.Roles.Select(r => r.Name)) : "No Role")</p>
                            <input type="text" class="form-control edit-mode d-none" name="Roles" value="@(Model.Roles.Any() ? string.Join(", ", Model.Roles.Select(r => r.Name)) : "No Role")" />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-bold">Status:</label>
                            <p class="view-mode">
                                <span class="badge @(Model.LockoutEnabled ? "bg-danger" : "bg-success")">
                                    @(Model.LockoutEnabled ? "Locked" : "Active")
                                </span>
                            </p>
                            <select class="form-select edit-mode d-none" name="LockoutEnabled">
                                <option value="false" selected="@(Model.LockoutEnabled == false)">Active</option>
                                <option value="true" selected="@(Model.LockoutEnabled == true)">Locked</option>
                            </select>
                        </div>
                    </div>
                    <div class="mt-3">
                        <button type="button" id="editButton" class="btn btn-soft-success" onclick="toggleEditMode()">
                            <i class="uil uil-pen"></i> Edit
                        </button>
                        <button type="submit" id="saveButton" class="btn btn-primary d-none">Save</button>
                        <button type="button" id="cancelButton" class="btn btn-secondary d-none" onclick="toggleEditMode()">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</main>

<script>
    function toggleEditMode() {
        let viewElements = document.querySelectorAll(".view-mode");
        let editElements = document.querySelectorAll(".edit-mode");
        let editButton = document.getElementById("editButton");
        let saveButton = document.getElementById("saveButton");
        let cancelButton = document.getElementById("cancelButton");

        viewElements.forEach(el => el.classList.toggle("d-none"));
        editElements.forEach(el => el.classList.toggle("d-none"));
        editButton.classList.toggle("d-none");
        saveButton.classList.toggle("d-none");
        cancelButton.classList.toggle("d-none");
    }
</script>