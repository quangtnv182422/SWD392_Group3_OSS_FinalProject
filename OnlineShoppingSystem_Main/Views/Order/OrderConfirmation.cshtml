@model Data.Models.OrderConfirmationViewModel
@{
	ViewData["Title"] = "Order Confirmation";
	// Get selected cart item IDs from TempData
	List<int> selectedCartItemIds = TempData["SelectedCartItemIds"] != null
		? Newtonsoft.Json.JsonConvert.DeserializeObject<List<int>>(TempData["SelectedCartItemIds"].ToString())
		: new List<int>();
	// Keep TempData alive for the next request
	TempData.Keep("SelectedCartItemIds");
}

@section Styles {
	<link rel="stylesheet" href="~/assets/css/main.css">
	<link rel="stylesheet" href="~/assets/css/responsive.css">
	<style>
		/* Reduce margins for the section */
		.checkout-section {
			margin-top: 50px !important;
			margin-bottom: 50px !important;
		}

		/* Adjust table styling for full-width product list */
		.order-details table {
			width: 100%;
			margin-bottom: 20px;
		}

		.order-details th, .order-details td {
			padding: 10px;
			vertical-align: middle;
		}

		.order-details img {
			width: 50px;
			height: 50px;
			object-fit: cover;
		}

		/* Add product button */
		.add-product-btn {
			background-color: #f28123;
			color: white;
			padding: 10px 20px;
			border: none;
			border-radius: 5px;
			cursor: pointer;
		}

			.add-product-btn:hover {
				background-color: #e06b1f;
			}

		/* Redesign form layout */
		.billing-address-form label {
			display: block;
			margin-bottom: 5px;
			font-weight: bold;
		}

		.billing-address-form input[type="text"],
		.billing-address-form input[type="email"],
		.billing-address-form select {
			width: 100%;
			padding: 8px;
			margin-bottom: 15px;
			border: 1px solid #ccc;
			border-radius: 4px;
			box-sizing: border-box;
		}

		.billing-address-form .row {
			margin-bottom: 15px;
		}

		.boxed-btn {
			background-color: #f28123;
			color: white;
			padding: 10px 20px;
			border: none;
			border-radius: 5px;
			cursor: pointer;
			width: 100%;
			text-align: center;
		}

			.boxed-btn:hover {
				background-color: #e06b1f;
			}

		/* Remove extra space below */
		.checkout-section .container {
			padding-bottom: 0;
		}

		/* Style the Order Summary section to fill the space */
		.order-details-wrap {
			height: 100%;
			background-color: #f9f9f9;
			border: 1px solid #e1e1e1;
			border-radius: 5px;
			padding: 0; /* Remove padding to split sections */
			display: flex;
			flex-direction: column;
		}

		/* Order Summary Section */
		.order-summary-section {
			flex: 1; /* Takes 50% of the space */
			padding: 15px;
			display: flex;
			flex-direction: column;
			justify-content: space-between;
		}

		.order-details {
			width: 100%;
		}

			.order-details th, .order-details td {
				padding: 8px;
				font-size: 14px;
			}

		.order-details-wrap thead th {
			font-size: 16px;
			font-weight: bold;
			color: #333;
			border-bottom: 2px solid #e1e1e1;
		}

		.order-details-body td {
			font-size: 14px;
			color: #555;
		}

		.checkout-details td {
			font-size: 16px;
			font-weight: bold;
			color: #333;
		}

		/* Ensure the right column matches the height of the left column */
		.col-lg-8, .col-lg-4 {
			display: flex;
			flex-direction: column;
		}

		.order-details-wrap {
			flex-grow: 1;
		}

		/* Full-width product list section */
		.full-width-section {
			margin-bottom: 20px;
		}

		.product-list-header {
			display: flex;
			justify-content: space-between;
			align-items: center;
			margin-bottom: 10px;
		}

		/* Style the Payment Method section inside Order Summary */
		.payment-method-section {
			flex: 1; /* Takes 50% of the space */
			padding: 15px;
			border-top: 1px solid #e1e1e1; /* Add a separator for visual distinction */
			display: flex;
			flex-direction: column;
			justify-content: center; /* Center content vertically */
		}

			.payment-method-section h4 {
				font-size: 16px;
				font-weight: bold;
				margin-bottom: 10px;
				color: #333;
			}

		.payment-method label {
			margin-right: 20px;
			display: block;
			margin-bottom: 5px;
			font-size: 14px;
			color: #555;
		}

		.payment-method input[type="radio"] {
			margin-right: 5px;
		}
	</style>
}

<!-- breadcrumb-section -->
<div class="breadcrumb-section breadcrumb-bg">
	<div class="container">
		<div class="row">
			<div class="col-lg-8 offset-lg-2 text-center">
				<div class="breadcrumb-text">
					<p>Confirm Your Order</p>
					<h1>Order Confirmation</h1>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- end breadcrumb section -->
<!-- Order Confirmation section -->
<div class="checkout-section mt-150 mb-150">
	<div class="container">
		<!-- Full-width Product List Section -->
		<div class="full-width-section">
			<div class="product-list-header">
				<h5>Your Order Items</h5>
				<form id="addMoreProductsForm" asp-controller="Cart" asp-action="Index" method="get" style="display:inline;">
					<input type="hidden" name="fromOrderConfirmation" value="true" />
					<button type="submit" class="add-product-btn">Add More Products</button>
				</form>
			</div>
			<div class="order-details">
				<table class="table">
					<thead>
						<tr>
							<th>Picture</th>
							<th>Product</th>
							<th>Price</th>
							<th>Quantity</th>
							<th>Amount</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Model.SelectedCartItems)
						{
							<tr>
								<td>
									<img src="@item.Product.ProductImages.FirstOrDefault()?.ProductImageUrl" alt="@item.Product.ProductName" width="50" height="50" />
								</td>
								<td>
									<strong>@item.Product.ProductName</strong>
									<br />
									Category: @item.Product.Category?.CategoryName, Available: @item.Product.Quantity
								</td>
								<td>@item.Product.Price.ToString("#,##0", new System.Globalization.CultureInfo("vi-VN")) VND</td>
								<td>@item.Quantity</td>
								<td>@((item.Quantity * item.Product.Price).ToString("#,##0", new System.Globalization.CultureInfo("vi-VN")) + "VND")</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>

		<!-- FORM BAO QUANH CẢ DELIVERY DETAILS VÀ ORDER SUMMARY -->
		<form method="post" asp-action="ProcessPayment" asp-controller="Payment" class="billing-address-form">
			<!-- Delivery Details và Order Summary được căn ngang -->
			<div class="row d-flex align-items-start">
				<!-- Cột Delivery Details (Chi tiết giao hàng) -->
				<div class="col-lg-8">
					<div class="checkout-accordion-wrap">
						<div class="card single-accordion">
							<div class="card-header">
								<h5>Delivery Details</h5>
							</div>
							<div class="card-body">
								<input type="hidden" name="selectedItems" value="@string.Join(",", Model.SelectedCartItems.Select(i => i.CartItemId))" />
								<input type="hidden" id="totalCostInput" name="totalCost" value="@Model.TotalCost" />

								<div class="row">
									<div class="col-md-4">
										<label for="fullName">Full Name*</label>
										<input type="text" id="fullName" name="fullName" value="@Model.FullName" placeholder="Full Name" required />
									</div>
									<div class="col-md-4">
										<label for="email">Email*</label>
										<input type="email" id="email" name="email" value="@Model.Email" placeholder="Email" required />
									</div>
									<div class="col-md-4">
										<label for="mobile">Mobile*</label>
										<input type="text" id="mobile" name="mobile" value="@Model.Mobile" placeholder="Mobile" required />
									</div>
								</div>

								<div class="row">
									<div class="col-md-4">
										<label for="province">City/Province*</label>
										<!--Lấy tên province ẩn-->
										<input type="hidden" id="selectedProvinceName" name="SelectedProvinceName" />
										<select id="province" name="SelectedProvince" class="form-control" required>
											<option value="">-- Select Province --</option>
										</select>
									</div>
									<div class="col-md-4">
										<label for="district">District*</label>
										<!--Lấy tên District ẩn-->
										<input type="hidden" id="selectedDistrictName" name="SelectedDistrictName" />
										<select id="district" name="SelectedDistrict" class="form-control" required>
											<option value="">-- Select District --</option>
										</select>
									</div>
									<div class="col-md-4">
										<label for="ward">Wards*</label>
										<!--Lấy tên Ward ẩn-->
										<input type="hidden" id="selectedWardName" name="SelectedWardName" />
										<select id="ward" name="SelectedWard" class="form-control" required>
											<option value="">-- Select Ward --</option>
										</select>
									</div>
								</div>

								<div class="row">
									<div class="col-md-12">
										<label for="address">Address*</label>
										<input type="text" id="address" name="address" value="@Model.Address" placeholder="Address" required />
									</div>
								</div>

								<div class="row">
									<div class="col-md-12">
										<label for="deliveryNotes">Delivery Notes</label>
										<input type="text" id="deliveryNotes" name="deliveryNotes" placeholder="Delivery Notes" />
									</div>
								</div>
							</div> <!-- End Card Body -->
						</div> <!-- End Single Accordion -->
					</div> <!-- End Checkout Accordion Wrap -->
				</div> <!-- End col-lg-8 -->
				<!-- Cột Order Summary (Tóm tắt đơn hàng) -->
				<div class="col-lg-4">
					<div class="order-details-wrap">
						<div class="order-summary-section">
							<table class="order-details">
								<thead>
									<tr>
										<th colspan="2">Order Summary</th>
									</tr>
								</thead>
								<tbody class="order-details-body">
									<tr>
										<td>Sub Total</td>
										<td>@Model.SubTotal.ToString("#,##0", new System.Globalization.CultureInfo("vi-VN")) VND</td>
									</tr>
									<tr>
										<td>Shipping Fee</td>
										<td><span id="shipping-fee">Calculating...</span></td>
									</tr>
								</tbody>
								<tbody class="checkout-details">
									<tr>
										<td>Total Cost</td>
										<td><span id="total-cost">@Model.TotalCost.ToString("#,##0", new System.Globalization.CultureInfo("vi-VN")) VND</span></td>
									</tr>
								</tbody>
							</table>
						</div>

						<!-- Payment Method Section -->
						<div class="payment-method-section">
							<h4>Payment Method</h4>
							<div class="payment-method">
								<label><input type="radio" name="paymentMethod" value="COD" checked /> Thanh toán khi nhận hàng (COD)</label>
								<label><input type="radio" name="paymentMethod" value="vnPay" /> Thanh toán bằng vnPay</label>
								<label><input type="radio" name="paymentMethod" value="PayOS" /> Thanh toán bằng mã QR</label>
							</div>
						</div>

						<!-- Checkout Button (Phải nằm trong form) -->
						<div class="row mt-4">
							<div class="col-md-12">
								<button type="submit" class="boxed-btn w-100">Checkout</button>
							</div>
						</div>
					</div> <!-- End Order Details Wrap -->
				</div> <!-- End col-lg-4 -->
			</div> <!-- End row -->
		</form> <!-- FORM ĐÓNG Ở ĐÂY -->




	</div>
</div>
<!-- end Order Confirmation section -->
@section Scripts {
	<script>
		$(document).ready(function () {
			loadProvinces();
			//Province
			$("#province").change(function () {
				//loadDistricts($(this).val());
				//$("#shipping-fee").text("Calculating...");
				//$("#ward").empty().append(`<option value="">-- Select Ward --</option>`);

				var provinceId = $(this).val();
				var provinceName = $("#province option:selected").data("name");

				$("#selectedProvinceName").val(provinceName);

				loadDistricts(provinceId);
				$("#shipping-fee").text("Calculating...");
				$("#ward").empty().append(`<option value="">-- Select Ward --</option>`);
			});

			//District
			$("#district").change(function () {
				var districtId = $(this).val();
				var districtName = $("#district option:selected").data("name");

				$("#selectedDistrictName").val(districtName);

				loadWards(districtId);
				$("#shipping-fee").text("Calculating...");
			});

			//Ward
			$("#ward").change(function () {
				var wardId = $(this).val();
				var wardName = $("#ward option:selected").data("name");

				$("#selectedWardName").val(wardName);

				if (wardId) {
					getAvailableServices();
				}
			});

			function loadProvinces() {
				$.get("/Order/GetProvinces", function (data) { 
					var provinces = data.data;
					$("#province").empty().append(`<option value="">-- Select Province --</option>`);
					$.each(provinces, function (index, province) {
						//$("#province").append(`<option value="${province.ProvinceID}">${province.ProvinceName}</option>`);
						$("#province").append(`<option value="${province.ProvinceID}" data-name="${province.ProvinceName}">${province.ProvinceName}</option>`);
					});
				});
			}

			function loadDistricts(provinceId) {
				$.get(`/Order/GetDistricts?provinceId=${provinceId}`, function (data) { 
					var districts = data.data;
					$("#district").empty().append(`<option value="">-- Select District --</option>`);
					$.each(districts, function (index, district) {
						//$("#district").append(`<option value="${district.DistrictID}">${district.DistrictName}</option>`);
						$("#district").append(`<option value="${district.DistrictID}" data-name="${district.DistrictName}">${district.DistrictName}</option>`);
					});
				});
			}

			function loadWards(districtId) {
				$.get(`/Order/GetWards?districtId=${districtId}`, function (data) { 
					var wards = data.data;
					$("#ward").empty().append(`<option value="">-- Select Ward --</option>`);
					$.each(wards, function (index, ward) {
						//$("#ward").append(`<option value="${ward.WardCode}">${ward.WardName}</option>`);
						$("#ward").append(`<option value="${ward.WardCode}" data-name="${ward.WardName}">${ward.WardName}</option>`);
					});
				});
			}

			function getAvailableServices() {
				var fromDistrictId = 1711;
				var toDistrictId = $("#district").val();
				var shopId = 5656073;

				$.ajax({
					url: "/Order/GetAvailableServices", 
					type: "POST",
					contentType: "application/json",
					data: JSON.stringify({ shopId: shopId, fromDistrictId: fromDistrictId, toDistrictId: toDistrictId }),
					success: function (data) {
						var response = typeof data === 'string' ? JSON.parse(data) : data;
						if (response.code === 200 && response.data && response.data.length > 0) {
							var serviceId = response.data[0].service_id;
							var serviceTypeId = 2;
							calculateShipping(serviceId, serviceTypeId);
						} else {
							$("#shipping-fee").text("Không có dịch vụ vận chuyển phù hợp");
						}
					}
				});
			}

			function calculateShipping(serviceId, serviceTypeId) {
				var fromDistrictId = 1711;
				var toDistrictId = $("#district").val();
				var weight = 500;
				var length = 20, width = 20, height = 10;
				var shopId = 5656073;

				$.ajax({
					url: "/Order/CalculateShipping", 
					type: "POST",
					contentType: "application/json",
					data: JSON.stringify({
						shopId: shopId,
						fromDistrictId: fromDistrictId,
						toDistrictId: toDistrictId,
						weight: weight,
						length: length,
						width: width,
						height: height,
						service_id: serviceId,
						service_type_id: serviceTypeId
					}),
					success: function (data) {
						var response = typeof data === 'string' ? JSON.parse(data) : data;
						if (response.code === 200 && response.data) {
							var fee = response.data.total;
							$("#shipping-fee").text(fee.toLocaleString() + " VND");
							var subTotal = @Model.SubTotal;
							$("#total-cost").text((subTotal + fee).toLocaleString() + " VND");
							$("#totalCostInput").val(subTotal + fee);
						} else {
							$("#shipping-fee").text("Không thể tính phí vận chuyển");
						}
					}
				});
			}
		});
	</script>
}