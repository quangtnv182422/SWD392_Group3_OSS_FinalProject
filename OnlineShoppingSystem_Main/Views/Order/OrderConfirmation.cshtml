@model OnlineShoppingSystem_Main.Models.OrderConfirmationViewModel


<h2>Order Confirmation</h2>

<table class="table">
    <thead>
        <tr>
            <th>Picture</th>
            <th>Product</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Amount</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.SelectedCartItems)
        {
            <tr>
                <td>
                    <img src="@item.Product.ProductImages.FirstOrDefault()?.ProductImageUrl" width="50" height="50" />
                </td>
                <td>
                    <strong>@item.Product.ProductName</strong>
                    <br />
                    Category: @item.Product.Category?.CategoryName, Available: @item.Product.Quantity
                </td>
                <td>@item.Product.Price.ToString("C")</td>
                <td>@item.Quantity</td>
                <td>@(item.Quantity * item.Product.Price).ToString("C")</td>
            </tr>
        }
    </tbody>
</table>

<h3>Delivery Details</h3>
<form method="post" asp-action="PlaceOrder">
    <input type="hidden" name="selectedItems" value="@string.Join(",", Model.SelectedCartItems.Select(i => i.CartItemId))" />

    <div>
        <label>Full name*</label>
        <input type="text" name="fullName" value="@Model.FullName" required />
    </div>
    <div>
        <label>Email</label>
        <input type="email" name="email" value="@Model.Email" required />
    </div>
    <div>
        <label>Mobile</label>
        <input type="text" name="mobile" value="@Model.Mobile" required />
    </div>

    <!-- Province -->
    <div>
        <label>Province</label>
        <select id="province" name="SelectedProvince" required>
            <option value="">-- Select Province --</option>
        </select>
    </div>

    <!-- District -->
    <div>
        <label>District</label>
        <select id="district" name="SelectedDistrict" required>
            <option value="">-- Select District --</option>
        </select>
    </div>

    <!-- Ward -->
    <div>
        <label>Ward</label>
        <select id="ward" name="SelectedWard" required>
            <option value="">-- Select Ward --</option>
        </select>
    </div>

    <!-- Address -->
    <div>
        <label>Address</label>
        <input type="text" name="address" required />
    </div>

    <h3>Payment Method</h3>
    <label><input type="radio" name="paymentMethod" value="Cash" checked /> Cash on Delivery</label>
    <label><input type="radio" name="paymentMethod" value="Banking" /> Internet Banking</label>
    <label><input type="radio" name="paymentMethod" value="Transfer" /> Bank Transfer</label>

    <h3>Order Summary</h3>
    <p>Sub Total: @Model.SubTotal.ToString("C")</p>
    <p>Shipping Fee: <span id="shipping-fee">Calculating...</span></p>
    <h3>Total Cost: <span id="total-cost">@Model.TotalCost.ToString("C")</span></h3>

    <button type="submit">Checkout</button>
</form>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        loadProvinces();

        $("#province").change(function () {
            loadDistricts($(this).val());
            $("#shipping-fee").text("Calculating...");
            $("#ward").empty().append(`<option value="">-- Select Ward --</option>`);
        });

        $("#district").change(function () {
            loadWards($(this).val());
            $("#shipping-fee").text("Calculating...");
        });

        // Change here - calculate shipping after ward selection
        $("#ward").change(function () {
            if ($(this).val()) {
                getAvailableServices();
            }
        });

        function loadProvinces() {
            $.get("/api/ghn/provinces", function (data) {
                var provinces = data.data;
                $("#province").empty().append(`<option value="">-- Select Province --</option>`);
                $.each(provinces, function (index, province) {
                    $("#province").append(`<option value="${province.ProvinceID}">${province.ProvinceName}</option>`);
                });
            })
            .fail(function (jqXHR, textStatus, errorThrown) {
                console.error("Error loading provinces: ", textStatus, errorThrown);
            });
        }

        function loadDistricts(provinceId) {
            $.get(`/api/ghn/districts/${provinceId}`, function (data) {
                var districts = data.data;
                $("#district").empty().append(`<option value="">-- Select District --</option>`);
                $.each(districts, function (index, district) {
                    $("#district").append(`<option value="${district.DistrictID}">${district.DistrictName}</option>`);
                });
            });
        }

        function loadWards(districtId) {
            $.get(`/api/ghn/wards/${districtId}`, function (data) {
                var wards = data.data;
                $("#ward").empty().append(`<option value="">-- Select Ward --</option>`);
                $.each(wards, function (index, ward) {
                    $("#ward").append(`<option value="${ward.WardCode}">${ward.WardName}</option>`);
                });
            });
        }

        function getAvailableServices() {
            var fromDistrictId = 1711; // ID kho hàng
            var toDistrictId = $("#district").val();
            var shopId = 5656073; // Shop ID

            $.ajax({
                url: "/api/ghn/available-services",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify({
                    shopId: shopId,
                    fromDistrictId: fromDistrictId,
                    toDistrictId: toDistrictId
                }),
                success: function (data) {
                    try {
                        // Try to parse if it's a string, otherwise use as is
                        var response = typeof data === 'string' ? JSON.parse(data) : data;

                        if (response.code === 200 && response.data && response.data.length > 0) {
                            // Get first service to calculate fee
                            var serviceId = response.data[0].service_id;
                            var serviceTypeId = 2; // Usually 2 for regular delivery
                            calculateShipping(serviceId, serviceTypeId);
                        } else {
                            $("#shipping-fee").text("Không có dịch vụ vận chuyển phù hợp");
                            console.error("No shipping services available:", response);
                        }
                    } catch (e) {
                        console.error("Error parsing response:", e, data);
                        $("#shipping-fee").text("Lỗi khi xử lý dữ liệu vận chuyển");
                    }
                },
                error: function (xhr) {
                    console.error("Error in available-services:", xhr.responseText);
                    $("#shipping-fee").text("Lỗi khi kiểm tra dịch vụ vận chuyển");
                }
            });
        }

        function calculateShipping(serviceId, serviceTypeId) {
            var fromDistrictId = 1711; // ID kho hàng
            var toDistrictId = $("#district").val();
            var weight = 500; // Assuming weight in grams
            var length = 20, width = 20, height = 10; // cm
            var shopId = 5656073; // Shop ID

            $.ajax({
                url: "/api/ghn/calculate-shipping",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify({
                    shopId: shopId,
                    fromDistrictId: fromDistrictId,
                    toDistrictId: toDistrictId,
                    weight: weight,
                    length: length,
                    width: width,
                    height: height,
                    service_id: serviceId,
                    service_type_id: serviceTypeId
                }),
                success: function (data) {
                    try {
                        // Try to parse if it's a string, otherwise use as is
                        var response = typeof data === 'string' ? JSON.parse(data) : data;

                        if (response.code === 200 && response.data) {
                            var fee = response.data.total;
                            $("#shipping-fee").text(fee.toLocaleString() + " VND");

                            var subTotal = @Model.SubTotal;
                            $("#total-cost").text((subTotal + fee).toLocaleString() + " VND");
                        } else {
                            $("#shipping-fee").text("Không thể tính phí vận chuyển: " + response.message);
                            console.error("Calculate shipping failed:", response);
                        }
                    } catch (e) {
                        console.error("Error parsing response:", e, data);
                        $("#shipping-fee").text("Lỗi khi xử lý dữ liệu vận chuyển");
                    }
                },
                error: function (xhr) {
                    console.error("Error calculating shipping:", xhr.responseText);
                    $("#shipping-fee").text("Lỗi khi tính phí vận chuyển");
                }
            });
        }
    });
</script>